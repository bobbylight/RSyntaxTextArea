buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:6.4.0'
    }
}

plugins {
    id 'com.github.spotbugs' version '6.0.26'
}

// We require building with JDK 11 or later. Built artifact compatibility
// is controlled by javaLanguageVersion
assert JavaVersion.current().isJava11Compatible()

group 'com.fifesoft'
// NOTE: Local Java 11:  /Library/Java/JavaVirtualMachines/jdk-11.0.25+9/Contents/Home

allprojects {

    repositories {
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }
    }

    wrapper {
        gradleVersion = '8.11.1'
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'com.github.spotbugs'

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }

    test {
        useJUnitPlatform()
    }

    checkstyle {
        toolVersion = '10.20.1'
        configDirectory = file("$rootProject.projectDir/config/checkstyle")
    }

    spotbugs {
        // Relative to subprojects
        includeFilter = file('../config/spotbugs-exclude.xml')
    }

    spotbugsMain {
        reports {
            html {
                required = true
            }
            xml {
                required = false
            }
        }
    }
    spotbugsTest {
        reports {
            html {
                required = true
            }
            xml {
                required = false
            }
        }
    }

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.3'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.3'
        testImplementation 'org.mockito:mockito-inline:4.11.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.3'
    }

    compileJava {
        options.release = Integer.parseInt(javaLanguageVersion)
        options.debug = true
        options.debugOptions.debugLevel = 'source,vars,lines'
        options.compilerArgs << '-Xlint:deprecation' << '-Xlint:unchecked'
    }
}
